# Copyright 2021 VMware, Inc.
# SPDX-License-Identifier: Apache-2.0


image: "python:3.9"

.vdk_core_changes: &vdk_core_locations
  - "projects/vdk-core/*"
  - "projects/vdk-core/cicd/**/*"
  - "projects/vdk-core/src/**/*"
  - "projects/vdk-core/tests/**/*"


.vdk-core-build:
  stage: build
  before_script:
    - cd projects/vdk-core/
  script:
    - ./cicd/build.sh
  retry: !reference [.retry, retry_options]
  coverage: /^TOTAL\s+\d+\s+\d+\s+(\d+\%)$/
  only:
    refs:
      - external_pull_requests
      - main
    changes: *vdk_core_locations
  artifacts:
    when: always
    reports:
      junit: tests.xml

vdk-core-build_with_py37:
  image: "python:3.7"
  extends: .vdk-core-build

vdk-core-build_with_py38:
  image: "python:3.8"
  extends: .vdk-core-build

vdk-core-build_with_py39:
  image: "python:3.9"
  extends: .vdk-core-build

vdk-core-build_with_py310:
  image: "python:3.10"
  extends: .vdk-core-build


.vdk-core-simple_func_test:
  services:
    - name: trinodb/trino
  stage: build
  before_script:
    - cd projects/vdk-core/
  script:
    - export VDK_TRINO_DOCKER_START=no
    - ./cicd/simple-functional-test.sh
  retry: !reference [.retry, retry_options]
  only:
    refs:
      - external_pull_requests
      - main
    changes:
      - "projects/vdk-core/**/*"
  artifacts:
    when: always
    reports:
      junit: tests.xml

vdk-core-simple_func_test_with_py37:
  image: "python:3.7"
  extends: .vdk-core-simple_func_test

vdk-core-simple_func_test_with_py38:
  image: "python:3.8"
  extends: .vdk-core-simple_func_test

vdk-core-simple_func_test_with_py39:
  image: "python:3.9"
  extends: .vdk-core-simple_func_test

vdk-core-simple_func_test_with_py310:
  image: "python:3.10"
  extends: .vdk-core-simple_func_test


vdk-core-release-candidate:
  stage: pre_release
  before_script:
    - cd projects/vdk-core/
  script:
    - pip install -U pip setuptools wheel twine
    - export VDK_RELEASE_OVERRIDE_PATCH_VERSION=${CI_PIPELINE_ID}.dev${CI_PIPELINE_IID}
    - ./cicd/set-patch-version.sh "$VDK_RELEASE_OVERRIDE_PATCH_VERSION"
    - ./cicd/release-vdk-core.sh
  retry: !reference [.retry, retry_options]
  only:
    refs:
      - main
    changes: *vdk_core_locations


vdk-core-release-candidate-base-image:
  stage: pre_release_image
  image: docker:19.03.8
  services:
    - docker:19.03.8-dind
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - cd projects/vdk-core/
  script:
    - echo "Build and release candidate vdk image of vdk-core"
    - apk add --no-cache git bash python3
    - python3 -V
    - python3 -m pip install -U setuptools configparser
    - export VDK_RELEASE_OVERRIDE_PATCH_VERSION=${CI_PIPELINE_ID}.dev${CI_PIPELINE_IID}
    - ./cicd/set-patch-version.sh "$VDK_RELEASE_OVERRIDE_PATCH_VERSION"
    - export VDK_PACKAGE=$(python3 setup.py --name)
    - export VDK_VERSION=$(python3 setup.py --version)
    - export BUILD_TYPE=pre_release
    - bash -x ./cicd/deploy-base-vdk-image.sh
  retry: !reference [.retry, retry_options]
  only:
    refs:
      - main
    changes: *vdk_core_locations


vdk-core-release:
  stage: release
  before_script:
    - cd projects/vdk-core/
  script:
    - pip install -U pip setuptools wheel twine
    - export VDK_RELEASE_OVERRIDE_PATCH_VERSION=${CI_PIPELINE_ID}
    - ./cicd/set-patch-version.sh "$VDK_RELEASE_OVERRIDE_PATCH_VERSION"
    - ./cicd/release-vdk-core.sh
  retry: !reference [.retry, retry_options]
  only:
    refs:
      - main
    changes: *vdk_core_locations
