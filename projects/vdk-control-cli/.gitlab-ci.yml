# Copyright 2021-2023 VMware, Inc.
# SPDX-License-Identifier: Apache-2.0

image: "python:3.9"

.vdk_control_cli_changes: &vdk_control_cli_changes_locations
  - projects/vdk-control-cli/**/*

.vdk-control-cli-build:
  stage: build
  before_script:
    - cd projects/vdk-control-cli
  script:
    - ./cicd/build.sh
  only:
    refs:
      - external_pull_requests
      - main
    changes: *vdk_control_cli_changes_locations
  artifacts:
    when: always
    reports:
      junit: tests.xml


# Run in different environments
# VDK Control CLI currently supports Python 3.7, 3.8, 3.9 and 3.10
vdk-control-cli-build-with-py37:
  image: "python:3.7"
  extends: .vdk-control-cli-build

vdk-control-cli-build-with-py38:
  image: "python:3.8"
  extends: .vdk-control-cli-build

vdk-control-cli-build-with-py39:
  image: "python:3.9"
  extends: .vdk-control-cli-build

vdk-control-cli-build-with-py310:
  image: "python:3.10"
  extends: .vdk-control-cli-build

vdk-control-cli-build-with-py311:
    image: "python:3.11"
    extends: .vdk-control-cli-build

vdk-control-cli-release-acceptance-test:
  stage: pre_release
  before_script:
    - cd projects/vdk-control-cli
  script:
    - set -x
    - python setup.py sdist --formats=gztar
    - pip install dist/* --extra-index-url $PIP_EXTRA_INDEX_URL
    - pip install vdk-heartbeat --extra-index-url $PIP_EXTRA_INDEX_URL
    - vdkcli version
    - export VDKCLI_OAUTH2_REFRESH_TOKEN=$VDK_API_TOKEN
    - export VDK_HEARTBEAT_OP_ID="vdkcli-$CI_PIPELINE_ID"
    - export JOB_NAME=vdk-control-cli-release-test-job-$(date +%s)
    - vdk-heartbeat -f cicd/release_test_heartbeat_config.ini
  artifacts:
    when: always
    reports:
      junit: tests.xml
  only:
    refs:
      - main
    changes: *vdk_control_cli_changes_locations

vdk-control-cli-release:
  stage: release
  before_script:
    - cd projects/vdk-control-cli
  script:
    - echo "$(cat version.txt | grep -o '[0-9]\.[0-9]').$CI_PIPELINE_ID" > version.txt
    - build_info_file="src/vdk/internal/control/vdk_control_build_info.py"
    - echo "" > $build_info_file # clear build info file first
    - echo "RELEASE_VERSION='$(cat version.txt)'" >> $build_info_file
    - echo "GIT_COMMIT_SHA='$CI_COMMIT_SHA'" >> $build_info_file
    - echo "GIT_BRANCH='$CI_COMMIT_REF_NAME'" >> $build_info_file
    - echo "GITLAB_CI_JOB_ID='$CI_JOB_ID'" >> $build_info_file
    - echo "BUILD_DATE='$(date -u)'" >> $build_info_file
    - pip install -U pip setuptools wheel twine
    - python setup.py sdist --formats=gztar
    - twine upload --repository-url "$PIP_REPO_UPLOAD_URL" -u "$PIP_REPO_UPLOAD_USER_NAME" -p "$PIP_REPO_UPLOAD_USER_PASSWORD" dist/*tar.gz --verbose
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes: *vdk_control_cli_changes_locations
