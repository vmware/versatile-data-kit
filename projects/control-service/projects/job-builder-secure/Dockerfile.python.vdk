# https://docs.docker.com/develop/develop-images/dockerfile_best-practices

ARG base_image=versatiledatakit/data-job-base-python-3.10-secure:latest

FROM $base_image

ARG UID=1000
ARG GID=1000

# Set the working directory
WORKDIR /job

# Validate base image is python based
RUN python -V
# Create necessary users and set home directory to /job
RUN groupadd -r -g $GID group && useradd -u $UID -g $GID -r user && chown -R $UID:$GID /job
ENV HOME=/job

# Copy the actual job that has to be executed
ARG job_name
COPY --chown=$UID:$GID $job_name $job_name/

# Remove execute permissions for files within the Data job directory, but not for the directories themselves
RUN chmod -R -x+X $job_name/*

# TODO: this would trigger for any change in job even if requirements.txt does not change
# but there's no COPY_IF_EXISTS command in docker to try copy it.
ARG requirements_file=requirements.txt
RUN if [ -f "$job_name/$requirements_file" ]; then pip3 install --disable-pip-version-check -q -r "$job_name/$requirements_file" || ( echo ">requirements_failed<" && exit 1 ) ; fi

# Install the native dependencies necessary for oracledb python library.
# Note: native dependencies will be installed only if the library is present in the requirements.txt
# https://oracle.github.io/python-oracledb/
RUN if [[ $(grep "oracledb" "$job_name/$requirements_file") ]] ; then \
      set -ex \
          && mkdir -p /opt/lib/native  \
          && yum -y install libaio curl unzip \
          && curl --insecure --output oracle-instantclient.zip https://download.oracle.com/otn_software/linux/instantclient/2110000/instantclient-basic-linux.x64-21.10.0.0.0dbru.zip \
          && unzip oracle-instantclient.zip -d /opt/lib/native/oracle && rm -f oracle-instantclient.zip \
          && sh -c "echo /opt/lib/native/oracle/instantclient_20_10 > /etc/ld.so.conf.d/oracle-instantclient.conf" \
          && ldconfig \
          && yum remove -y curl unzip
    fi

ARG job_githash
ENV JOB_NAME $job_name
ENV VDK_JOB_GITHASH $job_githash

# Delete system executables
RUN rm /usr/bin/chmod
RUN rm /usr/bin/chown
RUN rm /usr/bin/uname
RUN rm /usr/bin/yum
RUN rm /usr/bin/mkdir
RUN rm /usr/bin/grep
RUN rm /usr/sbin/groupadd
RUN rm /usr/sbin/groupdel
RUN rm /usr/sbin/useradd
RUN rm /usr/sbin/userdel
RUN rm /usr/sbin/ldconfig
RUN python -m pip uninstall pip -y

USER $UID
