# https://docs.docker.com/develop/develop-images/dockerfile_best-practices

ARG base_image=versatiledatakit/data-job-base-python-3.10-secure:latest
FROM $base_image

ARG UID=1000
ARG GID=1000
ARG job_name
ARG job_githash
ARG requirements_file=requirements.txt

ENV JOB_NAME $job_name
ENV VDK_JOB_GITHASH $job_githash
ENV HOME=/job

# Set the working directory
WORKDIR /job

# Copy the actual job that has to be executed
COPY --chown=$UID:$GID $job_name $job_name/

# Install native dependencies
RUN : \
     && set -ex \
     && echo "Validating base image is python based ..." \
     && python -V \
     && echo "Creating necessary users and set home directory to /job ..." \
     && yum install shadow freetype2 libpng -y \
     && groupadd -r -g $GID group && useradd -u $UID -g $GID -r user \
     && chown -R $UID:$GID /job \
     && echo "Removing execute permissions for files within the Data job directory, but not for the directories themselves ..." \
     && chmod -R -x+X $job_name/* \
     && if grep -q -E "^oracledb|^cx_Oracle" "$job_name/$requirements_file"; then \
           echo "Installing native dependencies related to support for oracledb python library ..." \
           && mkdir -p /opt/lib/native  \
           && yum -y install libaio unzip \
           && curl --insecure --output oracle-instantclient.zip https://download.oracle.com/otn_software/linux/instantclient/2110000/instantclient-basic-linux.x64-21.10.0.0.0dbru.zip \
           && unzip oracle-instantclient.zip -d /opt/lib/native/oracle && rm -f oracle-instantclient.zip \
           && sh -c "echo /opt/lib/native/oracle/instantclient_21_10 > /etc/ld.so.conf.d/oracle-instantclient.conf" \
           && ldconfig; fi \
    && if grep -q -E "^pyodbc" "$job_name/$requirements_file"; then \
           echo "Installing native dependencies related to support for pyodbc python library ..." \
           && yum install unixodbc -y; fi \
    && if [ -f "$job_name/$requirements_file" ]; then \
          echo "Installing native dependencies ..." \
          && yum install build-essential gcc glibc-devel git freetype2-devel libpng-devel -y \
          && echo "Installing requirements.txt ..." \
          && pip install --disable-pip-version-check -q -r "$job_name/$requirements_file"  \
          || ( echo ">requirements_failed<" && exit 1 ) \
          && echo "Removing native dependencies ..." \
          && yum autoremove build-essential gcc glibc-devel git unzip -y \
          && yum remove freetype2-devel libpng-devel -y;  fi \
    && echo "Installing native dependencies ..." \
    && yum install libstdc++ findutils openssl-c_rehash -y \
    && echo "Refreshing CA certificates ..." \
    && /usr/bin/rehash_ca_certificates.sh \
    && echo "Deleting system packages ..." \
    && yum autoremove shadow toybox openssl-c_rehash -y \
    && echo "Deleting system directories ..." \
    && rm -rf /boot /home /media /mnt /root /srv /usr/lib/ldscripts /usr/lib/rpm /usr/lib/sysimage \
    /usr/lib/tdnf /usr/lib/perl5 /usr/lib/gcc /usr/share/locale /tmp/* /usr/include /usr/libexec /usr/libexec  \
    && echo "Deleting system binaries ..." \
    && python -m pip uninstall pip -y \
    && cd /usr/sbin \
    && ls | grep -xv "ldconfig" | xargs rm -rf \
    && cd /usr/local/bin \
    && ls | grep -xv "python" | grep -xv "python3" | grep -xv $(python -c 'import sys; print("python"+str(sys.version_info[0])+"."+str(sys.version_info[1]))') | xargs rm -rf \
    && cd /usr/bin \
    && ls | grep -xv "sh" | grep -xv "bash" | xargs rm -rf

USER $UID
