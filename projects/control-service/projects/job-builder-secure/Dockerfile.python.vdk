# https://docs.docker.com/develop/develop-images/dockerfile_best-practices

ARG base_image=python:3.9-slim

FROM $base_image

ARG UID=1000
ARG GID=1000

# Set the working directory
WORKDIR /job

# Validate base image is python based
RUN python -V
# Create necessary users and set home directory to /job
RUN groupadd -r -g $GID group && useradd -u $UID -g $GID -r user && chown -R $UID:$GID /job
ENV HOME=/job

# Copy the actual job that has to be executed
ARG job_name
COPY --chown=$UID:$GID $job_name $job_name/

# Remove execute permissions for files within the Data job directory, but not for the directories themselves
RUN chmod -R -x+X $job_name/*

# TODO: this would trigger for any change in job even if requirements.txt does not change
# but there's no COPY_IF_EXISTS command in docker to try copy it.
ARG requirements_file=requirements.txt
RUN if [ -f "$job_name/$requirements_file" ]; then pip3 install --disable-pip-version-check -q -r "$job_name/$requirements_file" || ( echo ">requirements_failed<" && exit 1 ) ; fi

ARG job_githash
ENV JOB_NAME $job_name
ENV VDK_JOB_GITHASH $job_githash

# Delete system executables
RUN rm /bin/chown
RUN rm /bin/uname
RUN python -m pip uninstall pip -y

USER $UID
