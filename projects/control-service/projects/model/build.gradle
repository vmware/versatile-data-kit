plugins {
    id 'java-library'
    id 'idea'
    // TODO include model in multi-module build to reuse plugin versions
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.github.jk1.dependency-license-report' version '2.1'
}

dependencyManagement {
    // TODO include model in multi-module build to remove this import
    imports {
        mavenBom 'org.springframework.boot:spring-boot-dependencies:2.7.5'
    }
}

apply from: '../java-common.gradle'
apply from: '../application.gradle'
apply from: '../maven.gradle'
apply from: '../versions-of-external-dependencies.gradle'

version = file('version.txt').text.trim()

// completely remove log4j as per CVE-2021-44228, also it is not needed as we are using logback
configurations.all {
    exclude group: 'org.apache.logging.log4j'
}

dependencies{ // needed by java code generated by openapi codegenerator https://openapi-generator.tech
    implementation versions.'org.openapitools:jackson-databind-nullable'
    implementation 'javax.annotation:javax.annotation-api'
    implementation 'org.springframework:spring-web'
    implementation 'org.springframework:spring-context'
    implementation 'org.hibernate.validator:hibernate-validator'
    implementation 'javax.validation:validation-api'
    implementation 'javax.servlet:javax.servlet-api'
    implementation versions.'io.swagger.core.v3:swagger-annotations'
    implementation versions.'io.swagger.core.v3:swagger-models'
    // transitive dependencies version force
    // on next upgrade, revise if those still need to be set explicitly
    implementation versions.'com.google.guava:guava'

}

compileJava.dependsOn 'apidefs:compileJava' //generate Java from openapi specs prior to compilation

clean.doLast { //delete all openapi codegen output, including generated sources:
    project.delete(files("${projectDir}/src"))
    println "Deleting openapi bindings: folder ${projectDir}/src/"
    delete "${projectDir}/.openapi-generator-ignore"
    delete "${projectDir}/.openapi-generator"
    delete "${projectDir}/pom.xml"
    delete "${projectDir}/README.md"
}

compileJava.doFirst{ //those files are generated by openapi codegen, but are not needed, so we delete them.
    delete "${projectDir}/pom.xml"
    delete "${projectDir}/README.md"
}
