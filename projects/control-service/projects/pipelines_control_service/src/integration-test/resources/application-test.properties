datajobs.kadmin_user=
datajobs.kadmin_password=

logging.level.com.vmware.taurus=DEBUG

# Path to an ini config file that contains vdk runtime options
# src/main/resources/vdk_options.ini can be used for testing
datajobs.vdk_options_ini=
datajobs.vdk.image=registry.hub.docker.com/versatiledatakit/quickstart-vdk:release

datajobs.deployment.k8s.namespace=

# Credentials for generic registry type like Harbor or Dockerhub.
datajobs.docker.registryType=generic
datajobs.docker.repositoryUrl=${CICD_CONTAINER_REGISTRY_URI}
datajobs.docker.registryUsername=${CICD_CONTAINER_REGISTRY_USER_NAME}
datajobs.docker.registryPassword=${CICD_CONTAINER_REGISTRY_USER_PASSWORD}
datajobs.proxy.repositoryUrl=${CICD_CONTAINER_REGISTRY_URI}

#WebHook settings for the integration tests
integrationTest.mockedWebHookServerHost=localhost
integrationTest.mockedWebHookServerPort=5878
datajobs.post.create.webhook.endpoint=http://localhost:5878
datajobs.post.create.webhook.internal.errors.retries=3
datajobs.post.delete.webhook.endpoint=http://localhost:5878
datajobs.post.delete.webhook.internal.errors.retries=3

featureflag.security.enabled=true

# Required
# Please specify valid values for all of the properties below

datajobs.deployment.k8s.kubeconfig=${HOME}/.kube/config
datajobs.control.k8s.kubeconfig=${HOME}/.kube/config

# By default test tries to create namespace dynamically - in this case leave them empty.
# If in your kubernetes that is not possible, set a fixed namespace here
integrationTest.dataJobsNamespace=
integrationTest.controlNamespace=

datajobs.builder.image=registry.hub.docker.com/versatiledatakit/job-builder:latest
datajobs.deployment.dataJobBaseImage=registry.hub.docker.com/versatiledatakit/data-job-base-python-3.7:latest

# For local run, create personal access token in gitlab with read and write access (or use your user and password)
# and export those environmental variables in the terminal or in your IDE depending on how you run the tests .
datajobs.git.url=${CICD_GIT_URI}
datajobs.git.branch=main
datajobs.git.username=${CICD_GIT_USER}
datajobs.git.password=${CICD_GIT_PASSWORD}
datajobs.git.read.write.username=${CICD_GIT_USER}
datajobs.git.read.write.password=${CICD_GIT_PASSWORD}
