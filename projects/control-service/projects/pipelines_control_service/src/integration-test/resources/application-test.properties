datajobs.kadmin_user=
datajobs.kadmin_password=

logging.level.com.vmware.taurus=DEBUG

datajobs.aws.region=
datajobs.aws.accessKeyId=
datajobs.aws.secretAccessKey=

# Path to an ini config file that contains vdk runtime options
# src/main/resources/vdk_options.ini can be used for testing
datajobs.vdk_options_ini=
datajobs.vdk.image=registry.hub.docker.com/versatiledatakit/quickstart-vdk:release

datajobs.deployment.k8s.kubeconfig=${DEPLOYMENT_K8S_KUBECONFIG:}
datajobs.deployment.k8s.namespace=${DEPLOYMENT_K8S_NAMESPACE:default}
datajobs.control.k8s.k8sSupportsV1CronJob=false

datajobs.control.k8s.kubeconfig=${CONTROL_K8S_KUBECONFIG:}
datajobs.control.k8s.namespace=${CONTROL_K8S_NAMESPACE:default}

datajobs.docker.repositoryUrl=${DOCKER_REGISTRY_URL}
datajobs.docker.registryType=generic

datajobs.git.url=${GIT_URL}
datajobs.git.username=${GIT_USERNAME}
datajobs.git.password=${GIT_PASSWORD}
datajobs.git.branch=main

# Credentials for generic registry type like Harbor or Dockerhub.
# If using git container registry then nothing needs to be set here
datajobs.docker.registryUsername=${DOCKER_REGISTRY_USERNAME:${datajobs.git.username}}
datajobs.docker.registryPassword=${DOCKER_REGISTRY_PASSWORD:${datajobs.git.password}}
datajobs.docker.registrySecret=${DOCKER_REGISTRY_SECRET:}

#WebHook settings for the integration tests
integrationTest.mockedWebHookServerHost=localhost
integrationTest.mockedWebHookServerPort=5878
datajobs.post.create.webhook.endpoint=http://localhost:5878
datajobs.post.create.webhook.internal.errors.retries=3
datajobs.post.delete.webhook.endpoint=http://localhost:5878
datajobs.post.delete.webhook.internal.errors.retries=3

featureflag.security.enabled=true
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://test

# Required
# Please specify valid values for all of the properties below

# By default test tries to create namespace dynamically - in this case leave them empty.
# If in your kubernetes that is not possible, set a fixed namespace here
integrationTest.dataJobsNamespace=${DEPLOYMENT_K8S_NAMESPACE:}
integrationTest.controlNamespace=${CONTROL_K8S_NAMESPACE:}


# If the job builder image is saved in a private docker registry then this
# property should have the name of the secret in the env.
datajobs.builder.registrySecret=${DATAJOBS_BUILDER_REGISTRY_SECRET:}

datajobs.builder.image=registry.hub.docker.com/versatiledatakit/job-builder:1.2.3
datajobs.proxy.repositoryUrl=${DOCKER_REGISTRY_URL}
datajobs.deployment.dataJobBaseImage=versatiledatakit/data-job-base-python-3.7:latest

datajobs.deployment.builder.extraArgs=--force

# For local run, create personal access token in github with read and write access (or use your user and password)
# and export those environmental variables in the terminal or in your IDE depending on how you run the tests .
datajobs.git.read.write.username=${GIT_USERNAME_READ_WRITE:${datajobs.git.username}}
datajobs.git.read.write.password=${GIT_PASSWORD_READ_WRITE:${datajobs.git.password}}

datajobs.executions.logsUrl.template=https://log-insight-base-url/li/query/stream?query=%C2%A7%C2%A7%C2%A7AND%C\
2%A7%C2%A7%C2%A7%C2%A7{{start_time}}%C2%A7{{end_time}}%C2%A7true%C2%A7COUNT%C2%A7*%C2%A7\
timestamp%C2%A7pageSortPreference:%7B%22sortBy%22%3A%22-{{job_name}}-{{op_id}}-\
ingest_timestamp%22%2C%22sortOrder%22%3A%22DESC%22%7D%C2%A7\
alertDefList:%5B%5D%C2%A7partitions:%C2%A7%C2%A7text:CONTAINS:{{execution_id}}*
datajobs.executions.logsUrl.dateFormat=unix
