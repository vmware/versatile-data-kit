datajobs.kadmin_user=
datajobs.kadmin_password=

logging.level.com.vmware.taurus=DEBUG

datajobs.aws.region=
datajobs.aws.accessKeyId=
datajobs.aws.secretAccessKey=

# Path to an ini config file that contains vdk runtime options
# src/main/resources/vdk_options.ini can be used for testing
datajobs.vdk_options_ini=
datajobs.vdk.image=registry.hub.docker.com/versatiledatakit/quickstart-vdk:release

datajobs.deployment.k8s.kubeconfig=${DEPLOYMENT_K8S_KUBECONFIG}
datajobs.deployment.k8s.namespace=${DEPLOYMENT_K8S_NAMESPACE}

datajobs.control.k8s.kubeconfig=${CONTROL_K8S_KUBECONFIG}
datajobs.control.k8s.namespace=${CONTROL_K8S_NAMESPACE}

datajobs.docker.repositoryUrl=${DOCKER_REGISTRY_URL}
datajobs.docker.registryType=generic

# Credentials for generic registry type like Harbor or Dockerhub.
datajobs.docker.registryUsername=${DOCKER_REGISTRY_USERNAME}
datajobs.docker.registryPassword=${DOCKER_REGISTRY_PASSWORD}

#WebHook settings for the integration tests
integrationTest.mockedWebHookServerHost=localhost
integrationTest.mockedWebHookServerPort=5878
datajobs.post.create.webhook.endpoint=http://localhost:5878
datajobs.post.create.webhook.internal.errors.retries=3
datajobs.post.delete.webhook.endpoint=http://localhost:5878
datajobs.post.delete.webhook.internal.errors.retries=3

featureflag.security.enabled=true
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://test
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://gaz-preview.csp-vidm-prod.com

# The CSP Auth Token doesn't contain the user permissions in the default location - the authorities
# field of the JWT token. This property specifies a custom location for the authorities field.
datajobs.authorization.authorities-claim-name=perms

# A comma separated list of roles. Users whose tokens contain at least one of the roles
# are allowed to access and modify TPCS resources. If the list is empty, roles are not validated.
# E.g. "f399c40d-fb5e-4d24-8041-20b82471c6be/taurus:service-owner,65ecda65-2975-4a9c-b982-ccf52755296d/tpcs:admin"
ingestion.authorization.authorized-roles=tpcs:admin

# Required
# Please specify valid values for all of the properties below

# By default test tries to create namespace dynamically - in this case leave them empty.
# If in your kubernetes that is not possible, set a fixed namespace here
integrationTest.dataJobsNamespace=${DEPLOYMENT_K8S_NAMESPACE}
integrationTest.controlNamespace=${CONTROL_K8S_NAMESPACE}

datajobs.builder.image=registry.hub.docker.com/versatiledatakit/job-builder:latest
datajobs.proxy.repositoryUrl=${DOCKER_REGISTRY_URL}
datajobs.deployment.dataJobBaseImage=versatiledatakit/data-job-base-python-3.7:latest

datajobs.git.url=${GIT_URL}
datajobs.git.username=${GIT_USERNAME}
datajobs.git.password=${GIT_PASSWORD}
datajobs.git.branch=main

# For local run, create personal access token in github with read and write access (or use your user and password)
# and export those environmental variables in the terminal or in your IDE depending on how you run the tests .
datajobs.git.read.write.username=${GIT_USERNAME_READ_WRITE}
datajobs.git.read.write.password=${GIT_PASSWORD_READ_WRITE}
