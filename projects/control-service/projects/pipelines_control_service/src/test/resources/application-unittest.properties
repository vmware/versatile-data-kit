# The file contains default configuration that is used by unit tests

datajobs.aws.accessKeyId=
datajobs.aws.secretAccessKey=

datajobs.kadmin_user=
datajobs.kadmin_password=
datajobs.kerberos.principal.suffix=

datajobs.docker.registryUsername=
datajobs.docker.registryPassword=
datajobs.docker.registrySecret=
datajobs.vdk_options_ini=

datajobs.deployment.k8s.kubeconfig=

# The owner name and email address that will be used to send all Versatile Data Kit related email notifications.
datajobs.notification.owner.email=
datajobs.notification.owner.name=

# The gitlab repository and credentials for pulling data jobs code when building their images.
datajobs.git.url=
datajobs.git.username=
datajobs.git.password=

datajobs.control.k8s.namespace=${CONTROL_K8S_NAMESPACE:default}
datajobs.deployment.k8s.namespace=${DEPLOYMENT_K8S_NAMESPACE:default}
datajobs.deployment.supportedPythonVersions={3.9: {vdkImage: 'registry.hub.docker.com/versatiledatakit/quickstart-vdk:release', baseImage: 'python:3.9-slim'}}
datajobs.deployment.defaultPythonVersion=3.9
flyway.baselineOnMigrate=true
# Docker repository used to store Versatile Data Kit images (ECR)
datajobs.docker.repositoryUrl=
# Image name of VDK which will be used to run the data jobs
datajobs.vdk.image=

# AWS ECR region. Needed for authenticating to ECR via the aws-cli: https://aws.amazon.com/cli/
datajobs.aws.region=

featureflag.security.enabled=true
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://cannot-be-empty

datajobs.builder.image=

datajobs.proxy.repositoryUrl=

datajobs.git.read.write.username=
datajobs.git.read.write.password=

# DataSource Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=paulm2
spring.datasource.password=
# JPA/Hibernate properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# Specify the DB driver
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection pool configuration (Optional, but recommended for production)
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10
