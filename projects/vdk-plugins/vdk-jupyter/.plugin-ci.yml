# Copyright 2021-2023 VMware, Inc.
# SPDX-License-Identifier: Apache-2.0

.retry:
  retry_options:
    max: 2
    when:
      - always


.common-setup-vdk-jupyterlab-extension:
  image: "python:3.8-alpine"
  before_script:
    - cd projects/vdk-plugins/vdk-jupyter/vdk-jupyterlab-extension || exit 1
    - pip install -U pip setuptools pre-commit
    - apk --no-cache add npm libffi-dev curl musl-dev gcc
    - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.72.0
    - export PATH="$HOME/.cargo/bin:$PATH"
    - pip install jupyter
  retry: !reference [.retry, retry_options]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_PIPELINE_SOURCE == "external_pull_request_event"'
      changes:
        - "projects/vdk-plugins/vdk-jupyter/**/*"


build-vdk-jupyterlab-extension:
  extends: .common-setup-vdk-jupyterlab-extension
  stage: build
  script:
    - echo "Install Dependencies..."
    - npm ci
    - echo "Install Vdk JupyterLab Extension..."
    - pip install .
    - echo "Building VDK JupyterLab Extension..."
    - npm rebuild

integration-tests-vdk-jupyterlab-extension:
  image: "mcr.microsoft.com/playwright:v1.39.0-jammy"
  stage: pre_release_test
  script:
    - cd projects/vdk-plugins/vdk-jupyter/vdk-jupyterlab-extension
    - apt update
    - apt install software-properties-common -y
    - add-apt-repository ppa:deadsnakes/ppa
    - DEBIAN_FRONTEND=noninteractive apt install python3.9 python3.9-venv -y
    - python3.9 -m venv venv
    - source venv/bin/activate
    - pip install -U pip
    - apt-get install -y gcc python3.9-dev
    - pip install -e .
    - npm rebuild
    - jlpm install
    - jlpm build:prod
    - cd ./ui-tests
    - jlpm install
    - jlpm playwright install
    - jlpm playwright test
  retry: !reference [.retry, retry_options]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_PIPELINE_SOURCE == "external_pull_request_event"'
      changes:
        - "projects/vdk-plugins/vdk-jupyter/**/*"
  artifacts:
    when: always
    paths:
      - "projects/vdk-plugins/vdk-jupyter/vdk-jupyterlab-extension/ui-tests/playwright-report"

server-tests-vdk-jupyterlab-extension:
  extends: .common-setup-vdk-jupyterlab-extension
  stage: pre_release_test
  script:
    - echo "Running Server tests..."
    - pip install -e ".[test]"
    - pytest -vv -r ap --cov=vdk-jupyterlab-extension --junit-xml=server_tests_results.xml
  artifacts:
    when: always
    reports:
      junit: "projects/vdk-plugins/vdk-jupyter/vdk-jupyterlab-extension/server_tests_results.xml"


frontend-tests-vdk-jupyterlab-extension:
  extends: .common-setup-vdk-jupyterlab-extension
  stage: pre_release_test
  script:
    - echo "Running Frontend tests..."
    - npm install
    - npm run test:ci
  artifacts:
    when: always
    reports:
      junit: "projects/vdk-plugins/vdk-jupyter/vdk-jupyterlab-extension/frontend_tests_results.xml"


release-vdk-jupyter:
  extends: .common-setup-vdk-jupyterlab-extension
  variables:
    PLUGIN_NAME:
  image: "python:3.10-alpine"
  stage: release
  script:
    - export VDK_PATCH_VERSION=${CI_PIPELINE_ID}
    - pip install -U pip wheel twine build hatch
    - hatch version 0.1.$VDK_PATCH_VERSION
    - python -m build
    - twine upload --repository-url $PIP_REPO_UPLOAD_URL -u "$PIP_REPO_UPLOAD_USER_NAME" -p "$PIP_REPO_UPLOAD_USER_PASSWORD" dist/* --verbose
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - "projects/vdk-plugins/vdk-jupyter/**/*"
