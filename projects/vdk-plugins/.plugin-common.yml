# Copyright 2021-2023 VMware, Inc.
# SPDX-License-Identifier: Apache-2.0

.retry:
  retry_options:
    max: 1
    when:
      - always

.build-plugin:
  stage: build
  before_script:
    - cd projects/vdk-plugins/
    - pip install -U pip
    - pip install ./vdk-test-utils # TODO: REMOVE THIS AT SOME POINT
    - if [ -n "${USE_VDKCORE_DEV_VERSION}" ] ; then pip install -e ../vdk-core; fi
  script:
    - echo "Build plugin $PLUGIN_NAME"
    - cd ./$PLUGIN_NAME || exit 1
    - ../build-plugin.sh
  retry: !reference [.retry, retry_options]
  rules: # we want to trigger build jobs if there are changes to this plugin,
         # but not if there are changes to other plugins or the main directory
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_PIPELINE_SOURCE == "external_pull_request_event"'
      changes:
        - "projects/vdk-plugins/$PLUGIN_NAME/**/*"
  artifacts:
    when: always
    reports:
      junit: "projects/vdk-plugins/$PLUGIN_NAME/tests.xml"

.build-plugin-on-vdk-core-release:
  stage: pre_release_test
  variables:
    USE_VDKCORE_DEV_VERSION: "yes"
  extends: .build-plugin-dind
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_PIPELINE_SOURCE == "external_pull_request_event"'
      changes:
       - "projects/vdk-core/*"
       - "projects/vdk-core/src/**/*"

.build-plugin-dind:
  image: docker:23.0.1
  services:
    - docker:23.0.1-dind
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  extends: .build-plugin

.release-plugin:
  image: "python:3.10"
  stage: release
  before_script:
    - export VDK_PATCH_VERSION=${CI_PIPELINE_ID}
  script:
    - cd projects/vdk-plugins/
    - echo "Release plugin $PLUGIN_NAME"
    - cd $PLUGIN_NAME/ || exit 1
    - sed -ri "s/__version__ = \"([[:digit:]]\.[[:digit:]]\.).*\"$/__version__ = \"\1${VDK_PATCH_VERSION}\"/g" setup.py
    - pip install -U pip setuptools wheel twine
    - python setup.py sdist --formats=gztar
    # provide the credentials as Gitlab variables
    - twine upload --repository-url $PIP_REPO_UPLOAD_URL -u "$PIP_REPO_UPLOAD_USER_NAME" -p "$PIP_REPO_UPLOAD_USER_PASSWORD" dist/*tar.gz --verbose
  retry: !reference [.retry, retry_options]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
       - "projects/vdk-plugins/$PLUGIN_NAME/**/*"


.release-vdk-image:
  stage: release_image
  image: docker:23.0.1
  services:
    - docker:23.0.1-dind
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - export VDK_PATCH_VERSION=${CI_PIPELINE_ID}
    - export BUILD_TYPE=release
  script:
    - cd projects/vdk-plugins/
    - echo "Build and release vdk image of plugin $PLUGIN_NAME"
    - cd $PLUGIN_NAME/ || exit 1
    - sed -ri "s/__version__ = \"([[:digit:]]\.[[:digit:]]\.).*\"$/__version__ = \"\1${VDK_PATCH_VERSION}\"/g" setup.py
    - apk add --no-cache git bash python3 py3-pip
    - python3 -V
    - python3 -m pip install -U setuptools configparser
    - export VDK_PACKAGE=$(python3 setup.py --name)
    - export VDK_VERSION=$(python3 setup.py --version)
    - bash -x ../../vdk-core/cicd/deploy-base-vdk-image.sh
  retry: !reference [.retry, retry_options]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - "projects/vdk-plugins/$PLUGIN_NAME/**/*"
