# Copyright 2021-2023 VMware, Inc.
# SPDX-License-Identifier: Apache-2.0

## The GitLab Server URL (with protocol) that want to register the runner against
## ref: https://docs.gitlab.com/runner/commands/README.html#gitlab-runner-register
##
gitlabUrl: https://gitlab.com/

## The registration token for adding new Runners to the GitLab server. This must
## be retrieved from your GitLab instance.
## ref: https://docs.gitlab.com/ee/ci/runners/
##
runnerRegistrationToken: ""

## Set the certsSecretName in order to pass custom certificates for GitLab Runner to use
## Provide resource name for a Kubernetes Secret Object in the same namespace,
## this is used to populate the /etc/gitlab-runner/certs directory
## ref: https://docs.gitlab.com/runner/configuration/tls-self-signed.html#supported-options-for-self-signed-certificates
##
#certsSecretName:

## Configure the maximum number of concurrent jobs
## ref: https://docs.gitlab.com/runner/configuration/advanced-configuration.html#the-global-section
##
# At the time of writing, we have 50 CPU core and 100 GiB RAM quota.
#
concurrent: 15

## Defines in seconds how often to check GitLab for a new builds
## ref: https://docs.gitlab.com/runner/configuration/advanced-configuration.html#the-global-section
##
checkInterval: 30

## For RBAC support:
rbac:
  create: true

  ## Run the gitlab-bastion container with the ability to deploy/manage containers of jobs
  ## cluster-wide or only within namespace
  clusterWideAccess: false

  ## If RBAC is disabled in this Helm chart, use the following Kubernetes Service Account name.
  ##
  serviceAccountName: default

## Configuration for the Pods that the runner launches for each new job
##
runners:
  ## Default container image to use for builds when none is specified
  ##
  ## Noone should be using the default though.
  image: "ubuntu:21.04"

  ## Run all containers with the privileged flag enabled
  ## This will allow the docker:stable-dind image to run if you need to run Docker
  ## commands. Please read the docs before turning this on:
  ## ref: https://docs.gitlab.com/runner/executors/kubernetes.html#using-docker-dind
  ##
  privileged: true

  ## Set maximum build log size in kilobytes, by default set to 4096 (4MB)
  ## ref: https://docs.gitlab.com/runner/configuration/advanced-configuration.html#the-runners-section
  outputLimit: 51200

  imagePullSecrets:
    - [ secret-dockerhub-docker ]

  ## Namespace to run Kubernetes jobs in (defaults to 'default')
  ## namespace: gitlab-managed-apps

  ## Build Container specific configuration
  ##
  ## TODO: Have runners for big and small jobs.
  builds:
    cpuLimit: 1000m
    memoryLimit: 6Gi
    cpuRequests: 500m
    memoryRequests: 2Gi

  ## Service Container specific configuration
  ##
  ## Services in our case is docker:dind. Uses a lot since some jobs run several containers in it.
  services:
    cpuLimit: 1000m
    memoryLimit: 3Gi
    cpuRequests: 1000m
    memoryRequests: 3Gi

  ## Helper Container specific configuration
  ##
  ## Helper is the container that runs git clone. Very small.
  helpers:
    cpuLimit: 200m
    memoryLimit: 256Mi
    cpuRequests: 100m
    memoryRequests: 128Mi

  ## Runner configuration, where the multi line strings is evaluated as template.
  ## You can specify helm values inside the config.
  ## tpl: https://helm.sh/docs/howto/charts_tips_and_tricks/#using-the-tpl-function
  ## runner configuration: https://docs.gitlab.com/runner/configuration/advanced-configuration.html
  ## executor configuration: https://docs.gitlab.com/runner/executors/kubernetes.html
  config: |
    [[runners]]
      [runners.kubernetes]
        helper_ephemeral_storage_request_overwrite_max_allowed = "1Gi"
        helper_ephemeral_storage_limit_overwrite_max_allowed = "3Gi"
        ephemeral_storage_limit = "3Gi"
        ephemeral_storage_request = "1Gi"
        ephemeral_storage_limit_overwrite_max_allowed = "5Gi"
        ephemeral_storage_request_overwrite_max_allowed = "4Gi"
        service_ephemeral_storage_request = "100Mi"
        service_ephemeral_storage_limit = "1Gi"
        [[runners.kubernetes.host_aliases]]
          ip = "127.0.0.1"
          hostnames = ["localhost.vmware.com"]

# Resources for the runner itself. It is very lean.
resources:
  limits:
    memory: 256Mi
    cpu: 200m
  requests:
    memory: 128Mi
    cpu: 100m
